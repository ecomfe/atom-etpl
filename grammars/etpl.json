{
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#variables"
    },
    {
      "include": "#commands"
    },
    {
      "include": "#html-tags"
    },
    {
      "include": "text.html.basic"
    }
  ],
  "name": "ETPL",
  "repository": {
    "escaped-double-quote": {
      "name": "constant.character.escape.js",
      "match": "\\\\\\\""
    },
    "string": {
      "patterns": [
        {
          "include": "#string-single-quoted"
        },
        {
          "include": "#string-double-quoted"
        }
      ]
    },
    "string-single-quoted": {
      "patterns": [
        {
          "include": "#variables"
        },
        {
          "include": "#escaped-single-quote"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#commands"
        },
        {
          "include": "#entities"
        }
      ],
      "begin": "\\'",
      "end": "\\'",
      "name": "string.quoted.single.etpl",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.html"
        }
      }
    },
    "variables": {
      "comment": "ETPL Variables, like ${name}, ${ data.name | raw }",
      "patterns": [
        {
          "include": "#string"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#func"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#pipeline"
        },
        {
          "include": "#variable-in"
        }
      ],
      "begin": "(\\$\\{)\\s*(\\*?)\\s*",
      "end": "\\s*(\\})",
      "name": "variable.other.etpl",
      "endCaptures": {
        "1": {
          "name": "storage.type.variable.end.etpl"
        }
      },
      "beginCaptures": {
        "1": {
          "name": "storage.type.variable.begin.etpl"
        },
        "2": {
          "name": "storage.modifier.raw.etpl"
        }
      }
    },
    "pipeline": {
      "name": "keyword.control.pipeline.etpl",
      "match": "\\s*\\|\\s*"
    },
    "numeric": {
      "name": "constant.numeric.etpl",
      "match": "\\b((0(x|X)[0-9a-fA-F]+)|([0-9]+(\\.[0-9]+)?))\\b"
    },
    "func": {
      "endCaptures": {
        "1": {
          "name": "keyword.operator.etpl meta.brace.round.etpl"
        }
      },
      "begin": "([a-zA-Z0-9\\_]+)(\\()",
      "beginCaptures": {
        "1": {
          "name": "entity.name.function.etpl"
        },
        "2": {
          "name": "keyword.operator.etpl meta.brace.round.etpl"
        }
      },
      "end": "(\\))",
      "patterns": [
        {
          "include": "#string"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#parameter-in"
        }
      ]
    },
    "operator": {
      "patterns": [
        {
          "name": "meta.delimiter.comma.etpl",
          "match": ","
        },
        {
          "name": "keyword.operator.etpl",
          "match": "!|\\$|%|&|\\*|\\-\\-|\\-|\\+\\+|\\+|~|===|==|=|!=|!==|<=|>=|<<=|>>=|>>>=|<>|<|>|!|&&|\\|\\||\\?\\:|\\*=|(?<!\\()/=|%=|\\+=|\\-=|&=|\\^=|\\.|\\b(as)\\b"
        },
        {
          "name": "meta.brace.square.etpl",
          "match": "\\[|\\]"
        }
      ]
    },
    "tag-stuff": {
      "patterns": [
        {
          "include": "#tag-generic-attribute"
        },
        {
          "include": "#tag-id-attribute"
        },
        {
          "include": "#string"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#commands"
        }
      ]
    },
    "parameter-in": {
      "name": "variable.parameter.in.etpl",
      "match": "\\b([a-zA-Z0-9_])+\\b"
    },
    "string-double-quoted": {
      "patterns": [
        {
          "include": "#variables"
        },
        {
          "include": "#escaped-double-quote"
        },
        {
          "include": "#comments"
        },
        {
          "include": "#commands"
        },
        {
          "include": "#entities"
        }
      ],
      "begin": "\\\"",
      "end": "\\\"",
      "name": "string.quoted.double.etpl",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.string.end.html"
        }
      },
      "beginCaptures": {
        "0": {
          "name": "punctuation.definition.string.begin.html"
        }
      }
    },
    "commands": {
      "patterns": [
        {
          "include": "#string"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#variables"
        },
        {
          "include": "#func"
        },
        {
          "include": "#operator"
        }
      ],
      "begin": "(<!--)\\s*(\\/)?([a-z]+)\\s*(:)?",
      "end": "(-->)",
      "name": "meta.command.etpl",
      "endCaptures": {
        "1": {
          "name": "storage.type.command.end.etpl"
        }
      },
      "beginCaptures": {
        "1": {
          "name": "storage.type.command.begin.etpl"
        },
        "3": {
          "name": "support.class.etpl entity.name.command.etpl"
        },
        "2": {
          "name": "keyword.operator.command.close.etpl"
        },
        "4": {
          "name": "keyword.operator.command.start.etpl"
        }
      }
    },
    "tag-id-attribute": {
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.id.html"
        },
        "2": {
          "name": "punctuation.separator.key-value.html"
        }
      },
      "begin": "\\b(id)\\b\\s*(=)",
      "end": "(?<='|\")",
      "name": "meta.attribute-with-value.id.html",
      "patterns": [
        {
          "patterns": [
            {
              "include": "#variables"
            },
            {
              "include": "#commands"
            },
            {
              "include": "#entities"
            }
          ],
          "begin": "\\\"",
          "end": "\\\"",
          "name": "string.quoted.double.html",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "contentName": "meta.toc-list.id.html",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.html"
            }
          }
        },
        {
          "patterns": [
            {
              "include": "#variables"
            },
            {
              "include": "#commands"
            },
            {
              "include": "#entities"
            }
          ],
          "begin": "\\'",
          "end": "\\'",
          "name": "string.quoted.single.html",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.html"
            }
          },
          "contentName": "meta.toc-list.id.html",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.html"
            }
          }
        }
      ]
    },
    "escaped-single-quote": {
      "name": "constant.character.escape.js",
      "match": "\\\\\\'"
    },
    "invalid-comments": {
      "name": "invalid.illegal.bad-comments-or-CDATA.html",
      "match": "--"
    },
    "comments": {
      "comment": "ETPL comments, like <!-- // comments -->",
      "patterns": [
        {
          "include": "#invalid-comments"
        },
        {
          "name": "invalid.reminder.etpl",
          "match": "\\b(?i:TODO|FIXME)\\b"
        }
      ],
      "begin": "<!--\\s*\\/\\/",
      "end": "-->",
      "name": "comment.line.character.etpl"
    },
    "entities": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.entity.html"
            },
            "3": {
              "name": "punctuation.definition.entity.html"
            }
          },
          "name": "constant.character.entity.html",
          "match": "(&)([a-zA-Z0-9]+|#[0-9]+|#x[0-9a-fA-F]+)(;)"
        },
        {
          "name": "invalid.illegal.bad-ampersand.html",
          "match": "&"
        }
      ]
    },
    "tag-generic-attribute": {
      "name": "entity.other.attribute-name.html",
      "match": "\\b([a-zA-Z\\-:]+)"
    },
    "html-tags": {
      "patterns": [
        {
          "comment": "<tag></tag>, <x-component></x-component>",
          "patterns": [
            {
              "include": "#tag-stuff"
            }
          ],
          "begin": "(<)([a-zA-Z0-9:-]+)(?=[^>]*></\\2>)",
          "end": "(>)(<)(/)(\\2)(>)",
          "name": "meta.tag.any.html",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html"
            },
            "3": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "punctuation.definition.tag.begin.html meta.scope.between-tag-pair.html"
            },
            "5": {
              "name": "punctuation.definition.tag.end.html"
            },
            "4": {
              "name": "entity.name.tag.html"
            }
          },
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.html"
            }
          }
        },
        {
          "comment": "<?xml version=\"1.0\" ?>",
          "patterns": [
            {
              "include": "#tag-generic-attribute"
            },
            {
              "include": "#string"
            }
          ],
          "begin": "(<\\?)(xml)",
          "end": "(\\?>)",
          "name": "meta.tag.preprocessor.xml.html",
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.html"
            },
            "2": {
              "name": "entity.name.tag.xml.html"
            }
          }
        },
        {
          "captures": {
            "0": {
              "name": "punctuation.definition.comment.html"
            }
          },
          "begin": "<!--",
          "end": "--\\s*>",
          "name": "comment.block.html",
          "patterns": [
            {
              "include": "#invalid-comments"
            },
            {
              "include": "#variables"
            },
            {
              "include": "#commands"
            }
          ]
        },
        {
          "captures": {
            "0": {
              "name": "punctuation.definition.tag.html"
            }
          },
          "begin": "<!",
          "end": ">",
          "name": "meta.tag.sgml.html",
          "patterns": [
            {
              "patterns": [
                {
                  "name": "string.quoted.double.doctype.identifiers-and-DTDs.html",
                  "match": "\\\"[^\">]*\\\""
                }
              ],
              "begin": "(?i:doctype)",
              "end": "(?=>)",
              "name": "meta.tag.sgml.doctype.html"
            },
            {
              "patterns": [
                {
                  "include": "#variables"
                },
                {
                  "include": "#commands"
                }
              ],
              "begin": "\\[CDATA\\[",
              "end": "]](?=>)",
              "name": "constant.other.inline-data.html"
            },
            {
              "name": "invalid.illegal.bad-comments-or-CDATA.html",
              "match": "(\\s*)(?!--|>)\\S(\\s*)"
            }
          ]
        },
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "3": {
              "name": "punctuation.definition.tag.html"
            },
            "2": {
              "name": "entity.name.tag.style.html"
            }
          },
          "begin": "(?:^\\s+)?(<)((?i:style))\\b(?![^>]*/>)",
          "end": "(</)((?i:style))(>)(?:\\s*\\n)?",
          "name": "source.css.embedded.html",
          "patterns": [
            {
              "include": "#tag-stuff"
            },
            {
              "patterns": [
                {
                  "include": "#commands"
                },
                {
                  "include": "source.css"
                }
              ],
              "begin": "(>)",
              "end": "(?=</(?:style))",
              "beginCaptures": {
                "1": {
                  "name": "punctuation.definition.tag.html"
                }
              }
            }
          ]
        },
        {
          "patterns": [
            {
              "include": "#tag-stuff"
            },
            {
              "captures": {
                "1": {
                  "name": "punctuation.definition.tag.begin.html"
                },
                "2": {
                  "name": "entity.name.tag.script.html"
                }
              },
              "begin": "(?<!</(?:script|SCRIPT))(>)",
              "end": "(</)((?i:script))",
              "patterns": [
                {
                  "captures": {
                    "1": {
                      "name": "punctuation.definition.comment.js"
                    }
                  },
                  "name": "comment.line.double-slash.js",
                  "match": "(//).*?((?=>/script)|$\\n?)"
                },
                {
                  "captures": {
                    "0": {
                      "name": "punctuation.definition.comment.js"
                    }
                  },
                  "begin": "/\\*",
                  "end": "\\*/|(?=</script)",
                  "name": "comment.block.js"
                },
                {
                  "include": "#commands"
                },
                {
                  "include": "source.js"
                }
              ]
            }
          ],
          "begin": "(?:^\\s+)?(<)((?i:script))\\b(?![^>]*/>)",
          "end": "(?<=</(script|SCRIPT))(>)(?:\\s*\\n)?",
          "name": "source.js.embedded.html",
          "endCaptures": {
            "2": {
              "name": "punctuation.definition.tag.html"
            }
          },
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.html"
            },
            "2": {
              "name": "entity.name.tag.script.html"
            }
          }
        },
        {
          "patterns": [
            {
              "include": "#tag-stuff"
            }
          ],
          "begin": "(</?)((?i:body|head|html)\\b)",
          "end": "(>)",
          "name": "meta.tag.structure.any.html",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "captures": {
            "1": {
              "name": "punctuation.definition.tag.html"
            },
            "2": {
              "name": "entity.name.tag.structure.any.html"
            }
          }
        },
        {
          "patterns": [
            {
              "include": "#tag-stuff"
            }
          ],
          "begin": "(</?)((?i:address|blockquote|dd|div|dl|dt|fieldset|form|frame|frameset|h1|h2|h3|h4|h5|h6|iframe|noframes|object|ol|p|ul|applet|center|dir|hr|menu|pre)\\b)",
          "end": "(>)",
          "name": "meta.tag.block.any.html",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.block.any.html"
            }
          }
        },
        {
          "patterns": [
            {
              "include": "#tag-stuff"
            }
          ],
          "begin": "(</?)((?i:a|abbr|acronym|area|b|base|basefont|bdo|big|br|button|caption|cite|code|col|colgroup|del|dfn|em|font|head|html|i|img|input|ins|isindex|kbd|label|legend|li|link|map|meta|noscript|optgroup|option|param|q|s|samp|script|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|title|tr|tt|u|var)\\b)",
          "end": "((?: ?/)?>)",
          "name": "meta.tag.inline.any.html",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.inline.any.html"
            }
          }
        },
        {
          "patterns": [
            {
              "include": "#tag-stuff"
            }
          ],
          "begin": "(</?)([a-zA-Z0-9:]+)",
          "end": "(>)",
          "name": "meta.tag.other.html",
          "endCaptures": {
            "1": {
              "name": "punctuation.definition.tag.end.html"
            }
          },
          "beginCaptures": {
            "1": {
              "name": "punctuation.definition.tag.begin.html"
            },
            "2": {
              "name": "entity.name.tag.other.html"
            }
          }
        },
        {
          "include": "#entities"
        },
        {
          "name": "invalid.illegal.incomplete.html",
          "match": "<>"
        },
        {
          "name": "invalid.illegal.bad-angle-bracket.html",
          "match": "<"
        }
      ]
    },
    "variable-in": {
      "name": "entity.other.attribute-name.etpl variable.other.in.etpl",
      "match": "\\b([a-zA-Z0-9_])+\\b"
    }
  },
  "fileTypes": [
    "etpl",
    "tpl",
    "text.html",
    "tpl.html"
  ],
  "scopeName": "text.html.etpl",
  "uuid": "f8961911-529d-48e9-8fd2-58c5d733ae68"
}
